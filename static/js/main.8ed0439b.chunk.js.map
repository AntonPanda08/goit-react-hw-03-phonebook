{"version":3,"sources":["utils/createContact.js","components/phoneBookItem.js","components/phoneBookList.js","components/filter.js","components/contactForm.js","App.js","index.js"],"names":["createContact","name","number","id","uuidv4","PhoneBookItem","onRemoveContact","type","onClick","PhoneBookList","contacts","map","key","Filter","filter","onChangeFilter","value","onChange","ContactForm","onHandleSubmit","onHandleChange","onSubmit","required","Phonebook","state","handleChange","e","target","setState","handleSubmit","preventDefault","addContact","changeFilter","contact","prevState","includes","alert","getContacts","toLowerCase","toLocaleLowerCase","removeContact","contactId","persistedContacts","localStorage","getItem","this","JSON","parse","prevProps","setItem","stringify","length","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8ed0439b.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function createContact(name, number) {\r\n  return {\r\n    name: name,\r\n    id: uuidv4(),\r\n    number: number,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PhoneBookItem = ({ name, number, id, onRemoveContact }) => (\r\n  <li>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button type=\"button\" onClick={() => onRemoveContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\nPhoneBookItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n};\r\nexport default PhoneBookItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PhoneBookItem from \"./phoneBookItem\";\r\nconst PhoneBookList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, number, name }) => (\r\n      <PhoneBookItem\r\n        key={id}\r\n        id={id}\r\n        number={number}\r\n        name={name}\r\n        onRemoveContact={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\nPhoneBookList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\nexport default PhoneBookList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <>\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input type=\"text\" value={filter} onChange={onChangeFilter} />\r\n    </label>\r\n  </>\r\n);\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst ContactForm = ({ onHandleSubmit, onHandleChange, name, number }) => (\r\n  <form onSubmit={onHandleSubmit}>\r\n    <label>\r\n      Name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onHandleChange}\r\n        required\r\n      />\r\n    </label>\r\n    <br />\r\n    <label>\r\n      Contact\r\n      <br />\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        onChange={onHandleChange}\r\n        required\r\n      />\r\n    </label>\r\n    <br />\r\n    <br />\r\n    <button type=\"submit\" value=\"submit\">\r\n      Add contact\r\n    </button>\r\n  </form>\r\n);\r\nContactForm.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\nimport createContact from \"./utils/createContact\";\nimport PhoneBookList from \"./components/phoneBookList\";\nimport Filter from \"./components/filter\";\nimport ContactForm from \"./components/contactForm\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.addContact();\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  addContact = () => {\n    const { name, number } = this.state;\n    const contact = createContact(name, number);\n    this.setState((prevState) => {\n      let duplicate = this.state.contacts\n        .map((contact) => contact.name)\n        .includes(prevState.name);\n      return duplicate\n        ? alert(`${prevState.name} is already in list`)\n        : {\n            contacts: [...prevState.contacts, contact],\n          };\n    });\n  };\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(\n          (contact) => contact.id !== contactId\n        ),\n      };\n    });\n  };\n  render() {\n    const { contacts, name, number, filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onHandleSubmit={this.handleSubmit}\n          onHandleChange={this.handleChange}\n          name={name}\n          number={number}\n        />\n        <br />\n        {contacts.length > 1 && (\n          <Filter filter={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        <PhoneBookList\n          contacts={this.getContacts()}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Phonebook from \"./App\";\n\nReactDOM.render(<Phonebook />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}